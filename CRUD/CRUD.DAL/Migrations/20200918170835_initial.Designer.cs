// <auto-generated />
using System;
using CRUD.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRUD.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200918170835_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRUD.DAL.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = new Guid("450271d8-0091-4bf4-beb0-b899e026560e"),
                            Age = 67,
                            Name = "Andrzej"
                        },
                        new
                        {
                            Id = new Guid("db67e008-1c68-463e-a7b2-e75ad5a82a7f"),
                            Age = 44,
                            Name = "Henryk"
                        });
                });

            modelBuilder.Entity("CRUD.DAL.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PagesCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("91992789-5e7f-4c04-86b8-12df2933fdc8"),
                            AuthorId = new Guid("450271d8-0091-4bf4-beb0-b899e026560e"),
                            PagesCount = 320,
                            Title = "Wiedźmin"
                        },
                        new
                        {
                            Id = new Guid("bc6728be-a2d5-40ec-a7db-c1e94557a2f8"),
                            AuthorId = new Guid("db67e008-1c68-463e-a7b2-e75ad5a82a7f"),
                            PagesCount = 280,
                            Title = "Krzyżacy"
                        });
                });

            modelBuilder.Entity("CRUD.DAL.Entities.Book", b =>
                {
                    b.HasOne("CRUD.DAL.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
